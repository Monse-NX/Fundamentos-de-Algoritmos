#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define MAX 32  // Máximo permitido (puedes cambiarlo si necesitas más)

void imprimirMatriz(int M[MAX][MAX], int n) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            printf("%d ", M[i][j]);
        }
        printf("\n");
    }
}

void sumarMatrices(int A[MAX][MAX], int B[MAX][MAX], int C[MAX][MAX], int n) {
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            C[i][j] = A[i][j] + B[i][j];
}

void multiplicarDaC(int A[MAX][MAX], int B[MAX][MAX], int C[MAX][MAX], int n) {
    if (n == 1) {
        C[0][0] = A[0][0] * B[0][0];
        return;
    }

    int mid = n / 2;
    int A11[MAX][MAX], A12[MAX][MAX], A21[MAX][MAX], A22[MAX][MAX];
    int B11[MAX][MAX], B12[MAX][MAX], B21[MAX][MAX], B22[MAX][MAX];
    int C11[MAX][MAX] = {0}, C12[MAX][MAX] = {0}, C21[MAX][MAX] = {0}, C22[MAX][MAX] = {0};
    int temp1[MAX][MAX], temp2[MAX][MAX];

    // Separar matrices en submatrices
    for (int i = 0; i < mid; i++) {
        for (int j = 0; j < mid; j++) {
            A11[i][j] = A[i][j];
            A12[i][j] = A[i][j + mid];
            A21[i][j] = A[i + mid][j];
            A22[i][j] = A[i + mid][j + mid];

            B11[i][j] = B[i][j];
            B12[i][j] = B[i][j + mid];
            B21[i][j] = B[i + mid][j];
            B22[i][j] = B[i + mid][j + mid];
        }
    }

    // C11 = A11*B11 + A12*B21
    multiplicarDaC(A11, B11, temp1, mid);
    multiplicarDaC(A12, B21, temp2, mid);
    sumarMatrices(temp1, temp2, C11, mid);

    // C12 = A11*B12 + A12*B22
    multiplicarDaC(A11, B12, temp1, mid);
    multiplicarDaC(A12, B22, temp2, mid);
    sumarMatrices(temp1, temp2, C12, mid);

    // C21 = A21*B11 + A22*B21
    multiplicarDaC(A21, B11, temp1, mid);
    multiplicarDaC(A22, B21, temp2, mid);
    sumarMatrices(temp1, temp2, C21, mid);

    // C22 = A21*B12 + A22*B22
    multiplicarDaC(A21, B12, temp1, mid);
    multiplicarDaC(A22, B22, temp2, mid);
    sumarMatrices(temp1, temp2, C22, mid);

    // Combinar submatrices
    for (int i = 0; i < mid; i++) {
        for (int j = 0; j < mid; j++) {
            C[i][j] = C11[i][j];
            C[i][j + mid] = C12[i][j];
            C[i + mid][j] = C21[i][j];
            C[i + mid][j + mid] = C22[i][j];
        }
    }
}

int esPotenciaDe2(int n) {
    return (n != 0) && ((n & (n - 1)) == 0);
}

int main() {
    int n;
    int A[MAX][MAX], B[MAX][MAX], C[MAX][MAX] = {0};

    printf("Ingrese el tamaño de la matriz (potencia de 2, por ejemplo 2, 4, 8...): ");
    scanf("%d", &n);

    if (!esPotenciaDe2(n) || n > MAX) {
        printf("Error: El tamaño debe ser potencia de 2 y menor o igual a %d.\n", MAX);
        return 1;
    }

    printf("Ingrese los elementos de la matriz A (%dx%d):\n", n, n);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &A[i][j]);

    printf("Ingrese los elementos de la matriz B (%dx%d):\n", n, n);
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            scanf("%d", &B[i][j]);

    clock_t inicio = clock();

    multiplicarDaC(A, B, C, n);

    clock_t fin = clock();

    double tiempo = (double)(fin - inicio) / CLOCKS_PER_SEC;

    printf("\nResultado de A x B:\n");
    imprimirMatriz(C, n);

    printf("\nTiempo de ejecución: %f segundos\n", tiempo);

    return 0;
}
